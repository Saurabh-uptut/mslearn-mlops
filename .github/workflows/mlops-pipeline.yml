name: MLOps pipeline

on:
  workflow_dispatch:

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repo
      uses: actions/checkout@main
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    - name: Install Flake8
      run: pip install flake8
    - name: Run linting
      run: flake8 src/
  
  unit-tests:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repo
      uses: actions/checkout@main
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: pip install -r requirements.txt
    - name: Run unit tests
      run: pytest tests/       
  
  train:
    runs-on: ubuntu-latest
    environment: development
    steps:
    - name: Check out repo
      uses: actions/checkout@main
    - name: Install az ml extension
      run: az extension add -n ml -y
    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
    - name: Create data asset
      run: |
        az ml data create --name diabetes-dev-folder --version 1 --type uri_folder --path experimentation/data --resource-group "rg-mlops-dev-ksh026" --workspace-name "mlw-diabetes-dev-ksh026" || echo "Data asset already exists"
    - name: Trigger Azure ML job
      run: az ml job create --file src/job.yml --resource-group "rg-mlops-dev-ksh026" --workspace-name "mlw-diabetes-dev-ksh026"
  
  deploy-endpoint:
    runs-on: ubuntu-latest
    environment: development
    needs: train
    steps:
    - name: Check out repo
      uses: actions/checkout@main
    - name: Install az ml extension
      run: az extension add -n ml -y
    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
    - name: Create or update endpoint
      run: |
        az ml online-endpoint create --file src/endpoint.yml --resource-group "rg-mlops-dev-ksh026" --workspace-name "mlw-diabetes-dev-ksh026" || echo "Endpoint already exists"
    - name: Get latest model name
      id: get-model
      run: |
        MODEL_NAME=$(az ml model list --resource-group "rg-mlops-dev-ksh026" --workspace-name "mlw-diabetes-dev-ksh026" --query "[0].name" -o tsv)
        echo "Latest model: $MODEL_NAME"
        if [ -z "$MODEL_NAME" ] || [ "$MODEL_NAME" = "null" ]; then
          echo "No models found in workspace"
          exit 1
        fi
        echo "model-name=$MODEL_NAME" >> $GITHUB_OUTPUT
    - name: Create deployment with latest model
      run: |
        MODEL_NAME="${{ steps.get-model.outputs.model-name }}"
        echo "Deploying model: $MODEL_NAME"
        sed "s|model: azureml:.*@latest|model: azureml:$MODEL_NAME@latest|g" src/deployment.yml > deployment-temp.yml
        cat deployment-temp.yml
    - name: Deploy model to endpoint
      run: |
        az ml online-deployment create --file deployment-temp.yml --resource-group "rg-mlops-dev-ksh026" --workspace-name "mlw-diabetes-dev-ksh026" --all-traffic